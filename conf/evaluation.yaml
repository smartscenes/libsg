base_dir: "/datasets/internal/hssd"
base_url: ???  # base url for scene builder API requests
structured3d_path: ???  # base path to structured3d architecture files

scene_builder:
  arch_db:
    metadata: .data/datasets/structured3d/structured3d.rooms.csv
    path: "${base_url}/${structured3d_path}/arch/{scene_id}.arch.json"
  scene_db:
    path: "${base_dir}/fpsb/scenes/cluttered/scenestate"
  model_db:
    mesh_dir: "${base_dir}/hssd-hab/objects"
    collision_mesh_dir: "${base_dir}/hssd-hab/objects"
    generation:  # TODO: make a separate configuration for this
      output_dir: ???
      metadata_file: ???
      guidance_scale: 15.0
      batch_size: 1
    retrieval:
      embedding_dir: .data/embeddings
      embedding_field: f_openshape_p_1280  # for solr retrieval
      threed_future_object_ids: .data/datasets/threed_future/threed_future_object_ids.json
      top_k: 10
    size_threshold: 0.25
    defaults:
      up: [0, 1, 0]
      front: [0, 0, 1]
    default_object_gen_method: "retrieve"
    default_object_retrieve_type: "category"
    text_encoder: "ViT-bigG-14"
  solr_url: ???

defaults:
  - _self_
  - layout_generator@layout: layout_mapping
  - scene_parser@parser: parser_mapping
  - arch_generator@arch: arch_generator_mapping

hydra:
  # disable changing of cwd as it interferes with flask auto-restart
  run:
    dir: .
  # output files creation
  output_subdir: null

data: ".data/evaluation/test_prompts_example.csv"
output: ".data/evaluation/cache2"
metrics_output: "${output}/metrics.json"

methods:
  sceneInference.parserMethod: InstructScene  # RoomType, LLM, InstructScene
  sceneInference.layoutMethod: InstructScene  # ATISS, DiffuScene, InstructScene
  sceneInference.assetSources: fpModel

metrics:
  - _target_: libsg.evaluation.metrics.ObjectLevelCollisionRate
    object_dir_mapping: ${scene_builder.model_db.collision_mesh_dir}
    solr_url: ${scene_builder.solr_url}/models3d
  - _target_: libsg.evaluation.metrics.SceneLevelCollisionRate
    object_dir_mapping: ${scene_builder.model_db.collision_mesh_dir}
  - _target_: libsg.evaluation.metrics.ObjectLevelInBoundsRate
    object_dir_mapping: ${scene_builder.model_db.collision_mesh_dir}
    solr_url: ${scene_builder.solr_url}/models3d
    wall_depth: 0.0
  - _target_: libsg.evaluation.metrics.SceneLevelInBoundsRate
    object_dir_mapping: ${scene_builder.model_db.collision_mesh_dir}
    solr_url: ${scene_builder.solr_url}/models3d
    wall_depth: 0.0
  - _target_: libsg.evaluation.metrics.WalkableMetric
    robot_width: 0.3
    object_dir_mapping: ${scene_builder.model_db.collision_mesh_dir}
    
diversity_metrics:
  - _target_: libsg.evaluation.metrics.ObjectCategoryDistribution
  - _target_: libsg.evaluation.metrics.ObjectCountDistribution
  - _target_: libsg.evaluation.metrics.SceneGraphDistribution

gpu_monitor_interval: 0.5
use_existing: false
render_scenes: true
use_semantic_render: false
semantic_index: ".data/evaluation/semantic_color_index.csv"
verbose: false
